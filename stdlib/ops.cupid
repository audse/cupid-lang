trait [t] add = [
	fun [t] add = self, t other => _
]

use [t: int] add with int
use [t: dec] add with dec
use [t: string] add with string

trait [t] subtract = [
	fun [t] subtract = self, t other => _
]

use [t: int] subtract with int
use [t: dec] subtract with dec

trait [t] multiply = [
	fun [t] multiply = self, t other => _
]

use [t: int] multiply with int
use [t: dec] multiply with dec

trait [t] divide = [
	fun [t] divide = self, t other => _
]

use [t: int] divide with int
use [t: dec] divide with dec

trait [t] power = [
	fun [t] power = self, t other => _
]

use [t: int] power with int
use [t: dec] power with dec

trait [t] modulus = [
	fun [t] modulus = self, t other => _
]

use [t: int] modulus with int
use [t: dec] modulus with dec

trait [t] equal = [
	fun [bool] equal = self, t other => _
]

use [t: int] equal with int
use [t: dec] equal with dec
use [t: string] equal with string
use [t: char] equal with char
	
trait [t] not_equal = [
	fun [bool] not_equal = self, t other => _
]

use [t: int] not_equal with int
use [t: dec] not_equal with dec
use [t: string] not_equal with string
use [t: char] not_equal with char

trait [t] less = [
	fun [bool] less = self, t other => _
]

use [t: int] less with int
use [t: dec] less with dec
