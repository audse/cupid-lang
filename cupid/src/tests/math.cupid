trait [t] new = [
	fun [t] new
]

type [t] iter = [
	t entries,
	int index
]

use [t] iter {
	fun [t] next = self => {
		self.index += 1
		(self.entries).(self.index)
	}
}

# Implement traits for iterator
use [t] new with iter {
	fun [iter] new = t entries => [
		entries: entries,
		index: 0
	]
}

iter [t: int] mut myiter = iter.new([1, 2, 3])

myiter.next()

log (int)