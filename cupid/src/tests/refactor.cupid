
trait [t] add = [
	fun [t] add = self, t other => _
]

use [t: int] add with int
use [t: dec] add with dec
use [t: string] add with string
# use [t: array [e]] add with array [e]

trait [t] subtract = [
	fun [t] subtract = self, t other => _
]

use [t: int] subtract with int
use [t: dec] subtract with dec

trait [t] multiply = [
	fun [t] multiply = self, t other => _
]

use [t: int] multiply with int
use [t: dec] multiply with dec

trait [t] divide = [
	fun [t] divide = self, t other => _
]

use [t: int] divide with int
use [t: dec] divide with dec

trait [original, new] cast = [
	fun [new] cast = self => _
]

use [original: int, new: dec] cast with int
use [original: dec, new: int] cast with dec

map [int, string] my_map = [
	0: 'a',
	1: 'b'
]

log (my_map)