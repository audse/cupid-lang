<?xml version="1.0" encoding="UTF-8"?>
<syntax name="cupid">
    <meta>
        <name>CupidLang</name>
        <type>structured</type>
        <preferred-file-extension>cupid</preferred-file-extension>
    </meta>
    
    <detectors>
        <extension priority="1.0">cupid</extension>
    </detectors>
    
    <indentation>
        <increase>
            <expression>[{(\[&quot;&apos;`]</expression>
        </increase>
        <decrease>
            <expression>[)\]}&quot;&apos;`]</expression>
        </decrease>
    </indentation>
    
    <comments>
        <single>
            <expression>#</expression>
        </single>
        <multiline>
            <starts-with>
                <expression>***</expression>
            </starts-with>
            <ends-with>
                <expression>***</expression>
            </ends-with>
        </multiline>
    </comments>
    
    <brackets>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
    </brackets>
    
    <surrounding-pairs>
        <pair open="&lt;" close="&gt;" />
        <pair open="&apos;" close="&apos;" />
        <pair open="&quot;" close="&quot;" />
        <pair open="`" close="`" />
    </surrounding-pairs>
    
    <scopes>
        <include syntax="self" collection="expressions" />
        <include syntax="self" collection="keywords" />
        
        <!-- Meta -->
        <!-- <scope name="cupid.meta.declaration">
            <starts-with>
                <expression></expression>
            </starts-with>
            <ends-with>
                <expression></expression>
            </ends-with>
        </scope> -->
        
        <!-- Comments -->
        <scope name="cupid.comment.block" spell-check="true">
            <starts-with>
                <expression>\*\*\*</expression>
            </starts-with>
            <ends-with>
                <expression>\*\*\*</expression>
            </ends-with>
        </scope>
        <scope name="cupid.comment" spell-check="true">
            <expression>\#[^\n]*</expression>
        </scope>
        
        <!-- Tags -->
        <!-- <include syntax="self" collection="tags" /> -->
        
        <!-- Values -->
        <scope name="cupid.value.number">
            <expression>[0-9]+\.?[0-9]*</expression>
        </scope>
        <scope name="cupid.string">
            <expression>\&quot;[^\&quot;]*\&quot;</expression>
        </scope>
        <scope name="cupid.string">
            <expression>\&apos;[^\&apos;]*\&apos;</expression>
        </scope>
        
    </scopes>
    
    <collections>
    
        <!-- Keywords --> 
        <collection name="keywords">
            <scope name="cupid.keyword.definition">
                <strings>
                    <string>let</string>
                    <string>const</string>
                    <string>mut</string>
                </strings>
            </scope>
            <scope name="cupid.keyword.control">
                <expression>\=&gt;</expression>
            </scope>
            <scope name="cupid.keyword.control">
                <strings>
                    <string>if</string>
                    <string>else</string>
                    <string>for</string>
                    <string>in</string>
                    <string>while</string>
                    <string>loop</string>
                </strings>
            </scope>
            <scope name="cupid.keyword.operator">
                <expression>\+</expression>
                <expression>\+\=</expression>
                <expression>\-</expression>
                <expression>\-\=</expression>
                <expression>\*</expression>
                <expression>\*\=</expression>
                <expression>\/</expression>
                <expression>\/\=</expression>
                <expression>\^</expression>
                <expression>\^\=</expression>
            </scope>
            <scope name="cupid.keyword.storage.type">
                <strings>
                    <string>int</string>
                    <string>dec</string>
                    <string>fun</string>
                    <string>bool</string>
                    <string>string</string>
                    <string>list</string>
                    <string>dict</string>
                </strings>
            </scope>
            <scope name="cupid.keyword.construct">
                <strings>
                    <string>type</string>
                    <string>enum</string>
                </strings>
            </scope>
        </collection>
        
        <collection name="expressions">
        
            <include syntax="self" collection="definitions" />
            <include syntax="self" collection="terms" />
        
        </collection>
        
        <collection name="terms">
        
            <scope name="cupid.function-call">
                <starts-with>
                    <expression>([A-Za-z_]\w*)\s*(\()</expression>
                    <capture number="1" name="cupid.identifier.function" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                </ends-with>
                <subscopes anchored="true">
                    <scope name="cupid.argument" optional="true" repeat="true">
                        <expression>[^,)]*(\,)?</expression>
                        <subscopes>
                            <include syntax="self" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            
            <scope name="cupid.property">
                <expression>([A-Za-z_]\w*)(\.)([A-Za-z_]\w*)</expression>
                <capture number="1" name="cupid.identifier.variable" />
                <capture number="2" name="cupid.punctuation" />
                <capture number="3" name="cupid.identifier.property" />
            </scope>
            
            <!-- <scope name="cupid.function">
                <starts-with>
                    <expression>(?&lt;=[\=\:])</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <scope name="cupid.parameter" optional="true" repeat="true">
                        <expression>([A-Za-z_]+)\s*((\,))?\s*</expression>
                        <capture number="1" name="cupid.identifier.parameter" />
                        <capture number="2" name="cupid.punctuation" />
                    </scope>
                    <scope name="cupid.arrow">
                        <expression>\=\&gt;</expression>
                        <capture number="0" name="cupid.keyword" />
                    </scope>
                </subscopes>
            </scope> -->
            
        </collection>
    
        <!-- Function -->
        <collection name="definitions">
            
            <scope name="cupid.definition.type">
                <starts-with>
                    <expression>\b(type)\b\s*\[</expression>
                    <capture number="1" name="cupid.keyword.construct" />
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                </ends-with>
                <subscopes>
                    <scope name="cupid.definition.type">
                        <expression>([A-Za-z_]\w*)\s+([A-Za-z_]\w*)(\,)?</expression>
                        <capture number="1" name="cupid.storage.type" />
                        <capture number="2" name="cupid.identifier.property" />
                    </scope>
                </subscopes>
            </scope>
            
            <scope name="cupid.definition.variable">
                <expression>([A-Za-z_]\w*)\s+(([A-Za-z_]\w*)\s+)?([A-Za-z_]\w*)\s*(?=\=)</expression>
                <capture number="1" name="cupid.storage.type" />
                <capture number="2" name="cupid.keyword.modifier" />
                <capture number="3" name="cupid.identifier.variable" />
            </scope>
            
            <scope name="cupid.property.definition">
                <expression>([A-Za-z_]+)(\:)</expression>
                <capture number="1" name="cupid.identifier.property" />
                <capture number="2" name="cupid.punctuation" />
            </scope>
            
        </collection>
        
    </collections>
    
</syntax>
