<?xml version="1.0" encoding="UTF-8"?>
<syntax name="cupid">
    <meta>
        <name>CupidLang</name>
        <type>structured</type>
        <preferred-file-extension>cupid</preferred-file-extension>
    </meta>
    
    <detectors>
        <extension priority="1.0">cupid</extension>
    </detectors>
    
    <indentation>
        <increase>
            <expression>(\{[^}\"']*$)|(\[[^\]\"']*$)|(\([^)\"']*$)</expression>
        </increase>
        <decrease>
            <expression>^\s*(\s*\/\*.*\*\/\s*)*[\}\]\)\\]</expression>
        </decrease>
    </indentation>
    
    <comments>
        <single>
            <expression>#</expression>
        </single>
        <multiline>
            <starts-with>
                <expression>***</expression>
            </starts-with>
            <ends-with>
                <expression>***</expression>
            </ends-with>
        </multiline>
    </comments>
    
	
	<brackets>
		<pair open="{" close="}" />
		<pair open="[" close="]" />
		<pair open="(" close=")" />
	</brackets>
	
	<autoclosing-pairs>
		<pair open="{" close="}" />
		<pair open="[" close="]" />
		<pair open="(" close=")" />
		<pair open="/" close="/" skip="string,comment" />
		<pair open="&apos;" close="&apos;" />
		<pair open="&quot;" close="&quot;" />
		<pair open="`" close="`" />
		<pair open="&lt;" close="&gt;" skip="string,comment" />
		<pair open="***" close="***" />
	</autoclosing-pairs>
	
	<surrounding-pairs>
		<pair open="{" close="}" />
		<pair open="[" close="]" />
		<pair open="(" close=")" />
		<pair open="/" close="/" skip="string,comment" />
		<pair open="&apos;" close="&apos;" />
		<pair open="&quot;" close="&quot;" />
		<pair open="`" close="`" />
		<pair open="&lt;" close="&gt;" skip="string,comment" />
		<pair open="***" close="***" />
	</surrounding-pairs>
    
    <scopes>
        <!-- <include syntax="self" collection="expressions" /> -->
		<include syntax="self" collection="keywords" />
		<include syntax="self" collection="core" />
		<include syntax="self" collection="symbols" />
        
        <!-- Meta -->
        <!-- <scope name="cupid.meta.declaration">
            <starts-with>
                <expression></expression>
            </starts-with>
            <ends-with>
                <expression></expression>
            </ends-with>
        </scope> -->
        
        <!-- Comments -->
        <scope name="cupid.comment.block" spell-check="true">
            <starts-with>
                <expression>\*\*\*</expression>
            </starts-with>
            <ends-with>
                <expression>\*\*\*</expression>
            </ends-with>
        </scope>
        <scope name="cupid.comment" spell-check="true">
            <expression>\#[^\n]*</expression>
        </scope>
        
        <!-- Values -->
        <scope name="cupid.value.number">
            <expression>[0-9]+(\.[0-9]+)?</expression>
        </scope>
        <scope name="cupid.string">
            <expression>\&quot;[^\&quot;]*\&quot;</expression>
        </scope>
		<scope name="cupid.string">
			<expression>\&apos;[^\&apos;]*\&apos;</expression>
		</scope>
		<scope name="cupid.string">
			<expression>\`[^\`]*\`</expression>
		</scope>
		<scope name="cupid.value.null">
			<strings>
				<string>none</string>
			</strings>
		</scope>
		<scope name="cupid.regex.char">
			<expression>\\(\\)?[^\\]</expression>
		</scope>
		<scope name="cupid.regex">
			<expression>\/[^\/]*\/</expression>
		</scope>
        
    </scopes>
    
    <collections>
    
        <!-- Keywords --> 
        <collection name="keywords">
            <scope name="cupid.keyword.modifier">
				<symbol type="keyword" scope="global" />
                <strings>
                    <!-- <string>let</string>
                    <string>const</string> -->
                    <string>mut</string>
                </strings>
            </scope>
            <scope name="cupid.keyword.control">
                <expression>\=&gt;</expression>
            </scope>
			<scope name="cupid.keyword.condition">
				<symbol type="keyword" scope="global" />
				<strings>
					<string>if</string>
					<string>else</string>
					<string>for</string>
					<string>in</string>
					<string>while</string>
					<string>loop</string>
				</strings>
			</scope>
			<scope name="cupid.keyword.operator">
				<symbol type="keyword" scope="global" />
				<strings>
					<string>and</string>
					<string>or</string>
					<string>is</string>
					<string>is type</string>
					<string>is not</string>
					<string>not</string>
					<string>type of</string>
					<string>as</string>
				</strings>
			</scope>
            <scope name="cupid.keyword.operator">
                <expression>\+</expression>
                <expression>\+\=</expression>
                <expression>\-</expression>
                <expression>\-\=</expression>
                <expression>\*</expression>
                <expression>\*\=</expression>
                <expression>\/</expression>
                <expression>\/\=</expression>
                <expression>\^</expression>
                <expression>\^\=</expression>
            </scope>
			<scope name="cupid.keyword.construct">
				<symbol type="keyword" scope="global" />
				<strings>
					<string>type</string>
					<string>enum</string>
					<string>use</string>
					<string>with</string>
				</strings>
			</scope>
			<scope name="cupid.keyword.self">
				<symbol type="variable" scope="global" />
				<strings>
					<string>self</string>
				</strings>
			</scope>
        </collection>
		
		<collection name="core">
			<scope name="cupid.identifier.core.type">
				<symbol type="type" scope="global" />
				<strings>
					<string>int</string>
					<string>dec</string>
					<string>fun</string>
					<string>bool</string>
					<string>string</string>
					<string>array</string>
					<string>map</string>
					<string>nothing</string>
					<string>char</string>
				</strings>
			</scope>
			<scope name="cupid.core.function">
				<symbol type="function" scope="global" />
				<strings>
					<!-- array -->
					<string>push</string>
					<string>pop</string>
					<string>length</string>
					<string>remove</string>
					<string>insert</string>
					
					<!-- string -->
					<string>replace</string>
					<string>replace_n</string>
					<string>split</string>
					<string>split_at</string>
					<string>split_n</string>
					
					<!-- map -->
					<string>set</string>
					<string>get</string>
				</strings>
			</scope>
			<scope name="cupid.core.method">
				<expression>[A-Za-z_]+\!</expression>
			</scope>
		</collection>
		
		<collection name="symbols">
			<scope name="cupid.identifier">
				<symbol type="variable" />
				<expression>[A-Za-z_]+[\!]?</expression>
			</scope>
		</collection>    
    </collections>
    
</syntax>
